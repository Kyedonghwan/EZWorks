<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.it.ez.posting.model.PostingDAO">
	<sql id="searchWhere">
		<if test="searchKeyword!=null and searchKeyword!=''">
			where ${searchCondition}  like '%' || #{searchKeyword} || '%'
		</if>
	</sql>
	<select id="selectByBoard" resultType="EmpPostingViewVO">
		select * from emp_posting where board_no=#{boardNo}
	</select>
	<select id="selectAllPosting" resultType="BoardMainPostingVO">
		select * from posting_view_main order by posting_regdate desc
	</select>
	<select id="selectAllFavBoardPosting" resultType="BoardMainPostingVO">
		select * from posting_view_main where board_no in (select board_no from user_sel_board where emp_no =#{empNo}) order by posting_regdate desc
	</select>
	<insert id="insertPosting" parameterType="PostingVO">
		<selectKey resultType="int" keyProperty="postingNo" order="BEFORE">
			select posting_seq.nextval from dual
		</selectKey>
		insert into posting(POSTING_NO, POSTING_TITLE, BOARD_NO, EMP_NO, POSTING_CONTENT, POSTING_ISPUBLIC, 
			POSTING_ISNOTICE, POSTING_ISTEMP)
		values(#{postingNo}, #{postingTitle, jdbcType=VARCHAR}, #{boardNo}, #{empNo}, #{postingContent},
		#{postingIsPublic}, #{postingIsNotice}, #{postingIsTemp})
	</insert>
	<insert id="insertPostingFiles" parameterType="PostingFilesVO">
		insert into posting_files(posting_no, pf_size, pf_filename, pf_ofilename)
		values(#{postingNo}, #{pfFileSize}, #{pfFileName}, #{pfOFileName})
	</insert>
	<select id="selectAllPostingClassic" parameterType="BoardSearchVo" resultType="BoardClassicPostingVO">
		select *
		from
		(
			select rownum as RNUM, A.*
			from
			(
				select rownum as currentStatusVal, B.* from (select * from posting_view_classic where board_no=#{boardNo} order by posting_no)B
				<include refid="searchWhere"></include>
				order by posting_no desc
			)A
		)
		<![CDATA[
		where RNUM > #{firstRecordIndex} 
		and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
		]]>
	<!-- 	select * from posting_view_classic where board_no = #{boardNo} -->
	</select>
	<select id="selectTotalRecord" parameterType="boardSearchVo"
		resultType="int">
		select count(*) from (select * from posting_view_classic where board_no=#{boardNo})
        <include refid="searchWhere"></include>
	</select>
	<select id="selectPostingFeed" resultType="BoardFeedPostingVO">
		select * from POSTING_VIEW_FEED where board_no=#{boardNo} order by posting_regdate desc 
	</select>
	<select id="selectByPostingNo" resultType="PostingVo">
		select * from posting where posting_no=#{postingNo}
	</select>
	<select id="selectClassicByPostingNo" resultType="BoardClassicPostingVO">
		select * from posting_view_classic where posting_no=#{postingNo}
	</select>
	<select id="selectClassicPrev" resultType="BoardClassicPostingVO">
		select A.*
			from
			(
				select rownum as currentStatusVal, B.* from (select * from posting_view_classic where board_no=#{boardNo} order by posting_no)B
				order by posting_no desc
			)A where currentStatusVal=(select currentstatusval-1 from (select rownum as currentStatusVal, C.posting_no from (select * from posting_view_classic where board_no=#{boardNo} order by posting_no)C) where posting_no=#{postingNo})
	</select>
	<select id="selectClassicNext" resultType="BoardClassicPostingVO">
		select A.*
			from
			(
				select rownum as currentStatusVal, B.* from (select * from posting_view_classic where board_no=#{boardNo} order by posting_no)B
				order by posting_no desc
			)A where currentStatusVal=(select currentstatusval+1 from (select rownum as currentStatusVal, C.posting_no from (select * from posting_view_classic where board_no=#{boardNo} order by posting_no)C) where posting_no=#{postingNo})
	</select>
	<select id="selectTotalCount" resultType="int">
		select count(*) from posting_view_classic where board_no=#{boardNo}
	</select>
	<select id="getCurrentStatusVal" resultType="int">
		select currentstatusval from (select rownum as currentStatusVal, C.posting_no from (select * from posting_view_classic where board_no=#{boardNo} order by posting_no)C) where posting_no=#{postingNo}
	</select>
	<select id="selectFilesOfPosting" resultType="PostingFilesVO">
		select * from posting_files where posting_no=#{posting_no}
	</select>
	<insert id="addLike">
		insert into EMP_LIKES_POSTING(emp_no, posting_no)
		values(#{empNo}, #{postingNo})
	</insert>
	<delete id="deleteLike">
		delete from EMP_LIKES_POSTING where emp_no=#{empNo} and posting_no=#{postingNo}
	</delete>
	<select id="countLikes" resultType="int">
		select count(*) from EMP_LIKES_POSTING where posting_no=#{postingNo}
	</select>
	<select id="hasLiked" resultType="int">
		select count(*) from EMP_LIKES_POSTING where posting_no=#{postingNo} and emp_no=#{empNo}
	</select>
	<delete id="deleteFileList">
		delete from posting_files where posting_no=#{postingNo}
	</delete>
	<delete id="deletePosting">
		delete from posting where posting_no=#{postingNo}
	</delete>
	<update id="updateViewCount">
		update posting
		set posting_viewcount = posting_viewcount + 1
		where posting_no=#{postingNo}
	</update>
	<delete id="deletePostingLikes">
		delete from emp_likes_posting where posting_no = #{postingNo}
	</delete>
</mapper>









